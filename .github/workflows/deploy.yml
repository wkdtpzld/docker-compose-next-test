name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Config AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        env:
          AWS_REGION: us-east-1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

#      - name: Login to Amazon ECR
#        id: login-ecr-public
#        uses: aws-actions/amazon-ecr-login@v1
#        with:
#          registry-type: public
#        env:
#          AWS_DEFAULT_REGION: us-east-1
#          AWS_REGION: us-east-1
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          AWS_DEFAULT_REGION: us-east-1
#          AWS_REGION: us-east-1
#          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
#          ECR_REPOSITORY: compose-test
#          IMAGE_TAG: ${{ github.run_number }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#      - name: Deploy to EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            docker-compose pull
#            docker-compose up -d